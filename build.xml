<project name="winerecord" default="compile">
  <property name="appengine.sdk" location="lib/appengine-sdk"/>
  <fail message="Please define the appengine.sdk property to point to your SDK directory">
    <condition>
      <not>
        <and>
          <isset property="appengine.sdk"/>
          <available file="${appengine.sdk}/config/user/ant-macros.xml"/>
        </and>
      </not>
    </condition>
  </fail>

  <import file="${appengine.sdk}/config/user/ant-macros.xml"/>
  <property name="debug.port" value="5005"/>
  <property name="http.port" value="8080"/>
  <property name="log.file" value="app.log"/>
  <property name="log.days" value="2"/>
  <property name="war.dir" location="war"/>

  <target name="copyjars">
    <mkdir dir="${war.dir}/WEB-INF/lib"/>
    <copy todir="${war.dir}/WEB-INF/lib" flatten="true">
      <fileset dir="${appengine.sdk}/lib/user">
        <include name="**/*.jar"/>
      </fileset>
    </copy>
  </target>

  <target name="mkjdo" depends="copyjars" description="Create JDO classes">
    <java jar="${war.dir}/WEB-INF/lib/rainbow.jar" fork="true" dir="src">
      <arg line="--no-libs -f ../war/lib/arc -f ../war/lib/strings -f mkjdo -q -args wine.sml wine"/>
    </java>
  </target>

  <target name="compile" depends="mkjdo" description="Compile the application">
    <javac srcdir="src" destdir="${war.dir}/WEB-INF/classes" debug="on">
      <classpath>
        <fileset dir="${war.dir}/WEB-INF/lib">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${appengine.sdk}/lib/shared">
          <include name="*.jar"/>
        </fileset>
      </classpath>
    </javac>
    <enhance_war war="${war.dir}"/>
  </target>

  <target name="clean" description="Force a clean slate to rebuild">
    <delete includeemptydirs="true">
      <fileset dir="${war.dir}/WEB-INF/classes" excludes="META-INF/*"/>
    </delete>
    <delete dir="${war.dir}/WEB-INF/lib" excludes="rainbow.jar"/>
  </target>

  <target name="runserver" depends="compile" description="Run the dev_appserver">
    <dev_appserver war="${war.dir}" port="${http.port}"/>
  </target>

  <target name="dev_appserver" depends="runserver"/>

  <target name="debug" depends="compile" description="Launches dev_appserver with remote debugging enabled">
    <echo message="Launching dev_appserver on Web port ${http.port}, Java remote debug port ${debug.port}"/>
    <dev_appserver war="${war.dir}" port="${http.port}">
      <options>
        <arg value="--jvm_flag -Xdebug"/>
        <arg value="--jvm_flag -Xrunjdwp:transport dt_socket,server y,suspend y,address ${debug.port}"/>
      </options>
    </dev_appserver>
  </target>

  <target name="update" description="Uploads the application, including indexes">
    <appcfg action="update" war="${war.dir}"/>
  </target>

  <target name="update_indexes" description="Uploads only the application's indexes">
    <appcfg action="update_indexes" war="${war.dir}"/>
  </target>

  <target name="rollback" description="Rolls back any in-progress application update">
    <appcfg action="rollback" war="${war.dir}"/>
  </target>

  <target name="request_logs" description="Downloads the application's logs">
    <appcfg action="request_logs" war="${war.dir}">
      <options>
        <arg value="--num_days ${log.days}"/>
      </options>
      <args>
        <arg value="${log.file}"/>
      </args>
    </appcfg>
  </target>

</project>
